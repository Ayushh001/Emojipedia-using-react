{"ast":null,"code":"import _slicedToArray from \"F:\\\\Emojipedia-using-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\Emojipedia-using-react\\\\src\\\\components\\\\SearchEmoji.jsx\";\nimport React, { useState } from \"react\"; // import { emojipedia } from \"../../src/emojipedia\";\n\nvar flagEmoji = {\n  \"üòÅ\": {\n    head: \"Beaming Face with Smiling Eyes\",\n    info: \"hello\"\n  },\n  \"ü§£\": {\n    head: \"Rolling on the Floor Laughing Face\",\n    info: \"check\"\n  }\n};\nexport default function SearchEmoji() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      emoji = _useState2[0],\n      setEmoji = _useState2[1]; //search emoji and show head and info of the input emo ji\n\n\n  function emojiInputHandler(event) {\n    var emojiInput = event.target.value;\n    var emojiMeaning = flagEmoji[emojiInput];\n\n    if (emojiMeaning === undefined) {\n      setEmoji(\"Sorry, we don't have this in our database.\");\n    } else {\n      setEmoji(emojiMeaning.head + \" \" + emojiMeaning.info);\n    }\n  }\n\n  function emojiClickHandler(emoji) {\n    var emojiMeaning = flagEmoji[emoji];\n    setEmoji(emojiMeaning.head + \" \" + emojiMeaning.info);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Search Emoji\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: emojiInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, emoji), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"emojis we know\"), flagEmoji.map(function (emoji) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick() {\n        return emojiClickHandler(emoji.emoji);\n      },\n      style: {\n        fontSize: \"2rem\",\n        padding: \"0.5rem\",\n        cursor: \"pointer\"\n      },\n      key: emoji.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, emoji.emoji);\n  }));\n}","map":{"version":3,"sources":["F:/Emojipedia-using-react/src/components/SearchEmoji.jsx"],"names":["React","useState","flagEmoji","head","info","SearchEmoji","emoji","setEmoji","emojiInputHandler","event","emojiInput","target","value","emojiMeaning","undefined","emojiClickHandler","map","fontSize","padding","cursor","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AAEA,IAAMC,SAAS,GAAG;AAChB,QAAM;AACJC,IAAAA,IAAI,EAAE,gCADF;AAEJC,IAAAA,IAAI,EAAE;AAFF,GADU;AAKhB,QAAM;AACJD,IAAAA,IAAI,EAAE,oCADF;AAEJC,IAAAA,IAAI,EAAE;AAFF;AALU,CAAlB;AAWA,eAAe,SAASC,WAAT,GAAuB;AACpC,kBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd,iBADoC,CAEpC;;;AACA,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,QAAMC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAhC;AACA,QAAMC,YAAY,GAAGX,SAAS,CAACQ,UAAD,CAA9B;;AACA,QAAIG,YAAY,KAAKC,SAArB,EAAgC;AAC9BP,MAAAA,QAAQ,CAAC,4CAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAACM,YAAY,CAACV,IAAb,GAAoB,GAApB,GAA0BU,YAAY,CAACT,IAAxC,CAAR;AACD;AACF;;AAED,WAASW,iBAAT,CAA2BT,KAA3B,EAAkC;AAChC,QAAMO,YAAY,GAAGX,SAAS,CAACI,KAAD,CAA9B;AACAC,IAAAA,QAAQ,CAACM,YAAY,CAACV,IAAb,GAAoB,GAApB,GAA0BU,YAAY,CAACT,IAAxC,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,IAAA,QAAQ,EAAEI,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKGJ,SAAS,CAACc,GAAV,CAAc,UAAUV,KAAV,EAAiB;AAC9B,wBACE;AACE,MAAA,OAAO,EAAE;AAAA,eAAMS,iBAAiB,CAACT,KAAK,CAACA,KAAP,CAAvB;AAAA,OADX;AAEE,MAAA,KAAK,EAAE;AAAEW,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,OAAO,EAAE,QAA7B;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OAFT;AAGE,MAAA,GAAG,EAAEb,KAAK,CAACc,EAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGd,KAAK,CAACA,KALT,CADF;AASD,GAVA,CALH,CADF;AAmBD","sourcesContent":["import React, { useState } from \"react\";\r\n// import { emojipedia } from \"../../src/emojipedia\";\r\n\r\nconst flagEmoji = {\r\n  \"üòÅ\": {\r\n    head: \"Beaming Face with Smiling Eyes\",\r\n    info: \"hello\",\r\n  },\r\n  \"ü§£\": {\r\n    head: \"Rolling on the Floor Laughing Face\",\r\n    info: \"check\",\r\n  },\r\n};\r\n\r\nexport default function SearchEmoji() {\r\n  const [emoji, setEmoji] = useState(\"\");\r\n  //search emoji and show head and info of the input emo ji\r\n  function emojiInputHandler(event) {\r\n    const emojiInput = event.target.value;\r\n    const emojiMeaning = flagEmoji[emojiInput];\r\n    if (emojiMeaning === undefined) {\r\n      setEmoji(\"Sorry, we don't have this in our database.\");\r\n    } else {\r\n      setEmoji(emojiMeaning.head + \" \" + emojiMeaning.info);\r\n    }\r\n  }\r\n\r\n  function emojiClickHandler(emoji) {\r\n    const emojiMeaning = flagEmoji[emoji];\r\n    setEmoji(emojiMeaning.head + \" \" + emojiMeaning.info);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Search Emoji</h1>\r\n      <input onChange={emojiInputHandler} />\r\n      <h2>{emoji}</h2>\r\n      <h3>emojis we know</h3>\r\n      {flagEmoji.map(function (emoji) {\r\n        return (\r\n          <span\r\n            onClick={() => emojiClickHandler(emoji.emoji)}\r\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\r\n            key={emoji.id}\r\n          >\r\n            {emoji.emoji}\r\n          </span>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}